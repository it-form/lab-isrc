name: Docker Compose CI
on:
  push:
  pull_request:
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Récupérer le code
        uses: actions/checkout@v4
      - name: Configurer Docker Compose
        run: |
          docker --version
          docker compose version || true
      - name: Lancer MySQL, WordPress et Adminer
        run: |
          cat > docker-compose.yml <<'EOF'
          version: '3.8'
          services:
            db:
              image: mysql:8.0
              restart: always
              environment:
                MYSQL_DATABASE: wordpress
                MYSQL_USER: wpuser
                MYSQL_PASSWORD: wppass
                MYSQL_ROOT_PASSWORD: rootpass
              ports:
                - "3306:3306"
            wordpress:
              image: wordpress:latest
              restart: always
              ports:
                - "8080:80"
              environment:
                WORDPRESS_DB_HOST: db:3306
                WORDPRESS_DB_USER: wpuser
                WORDPRESS_DB_PASSWORD: wppass
                WORDPRESS_DB_NAME: wordpress
              depends_on:
                - db
            adminer:
              image: adminer
              restart: always
              ports:
                - "8081:8080"
          EOF

          docker compose up -d
          sleep 30 # on attend que les services démarrent
      - name: Vérifier que les containers tournent
        run: docker ps
      - name: Vérifier que MySQL fonctionne
        run: |
          docker run --rm --network host mysql:8.0 \
            mysql -h127.0.0.1 -uwpuser -pwppass -e "SHOW DATABASES;" | grep wordpress || exit 1
      - name: Vérifier que WordPress répond
        run: curl -I http://localhost:8080 || exit 1
      - name: Vérifier qu’Adminer répond
        run: curl -I http://localhost:8081 || exit 1